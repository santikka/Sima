% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/event.R
\docType{class}
\name{Event}
\alias{Event}
\title{Class providing base event functionality.}
\value{
Object of \code{\link{R6Class}} Event, with methods to get/set the internal parameter values and to evaluate the event mechanism.
}
\description{
Provides methods for evaluating event occurrences. The event mechanism should only be evaluated by the simulator.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{description}}{A character string giving a more descriptive overview of the event's role.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Event$new()}}
\item \href{#method-apply}{\code{Event$apply()}}
\item \href{#method-allocate}{\code{Event$allocate()}}
\item \href{#method-set_parameters}{\code{Event$set_parameters()}}
\item \href{#method-get_parameters}{\code{Event$get_parameters()}}
\item \href{#method-set_id}{\code{Event$set_id()}}
\item \href{#method-get_id}{\code{Event$get_id()}}
\item \href{#method-get_name}{\code{Event$get_name()}}
\item \href{#method-clone}{\code{Event$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new Event object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$new(
  name,
  description = "",
  parameters = list(),
  derived = list(),
  allocated = list(),
  mechanism
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{A character string giving the name of the event. Must be unique.}

\item{\code{description}}{A character string giving a more descriptive overview of the event's role.}

\item{\code{parameters}}{A named list giving the initial parameter values of the event.}

\item{\code{derived}}{A list of expression that define additional parameters based on those in \code{parameters}.
If given, then \code{parameters} should be named, so its elements can be referenced by elements of \code{derived}.}

\item{\code{allocated}}{A named list of expression that define objects that persist between iterations,
for example to avoid memory reallocation. The initial \code{status} of the simulator can be referenced by these expressions, a
s well as any \code{parameters} or \code{derived} parameters of the event itself.}

\item{\code{mechanism}}{An expression that defines the event functionality.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-apply"></a>}}
\if{latex}{\out{\hypertarget{method-apply}{}}}
\subsection{Method \code{apply()}}{
Apply an event. Not defined for the superclass.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$apply()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-allocate"></a>}}
\if{latex}{\out{\hypertarget{method-allocate}{}}}
\subsection{Method \code{allocate()}}{
Allocates persistent objects for the event.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$allocate(status)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{status}}{The initial status of the \code{Simulator}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_parameters"></a>}}
\if{latex}{\out{\hypertarget{method-set_parameters}{}}}
\subsection{Method \code{set_parameters()}}{
Set the parameter values of the event.
Derived parameters are computed again based on the new values.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$set_parameters(pars)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pars}}{A named list where where the names correspond
to the names of the parameters of whose values are to be set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_parameters"></a>}}
\if{latex}{\out{\hypertarget{method-get_parameters}{}}}
\subsection{Method \code{get_parameters()}}{
Get the current parameter values.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$get_parameters(derived = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{derived}}{A logical value. If \code{TRUE} (the default), the derived parameters are also returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of the current parameter values.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_id"></a>}}
\if{latex}{\out{\hypertarget{method-set_id}{}}}
\subsection{Method \code{set_id()}}{
Assing an identifier for the event. Should not be called by the user directly.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$set_id(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{An integer identifier to set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_id"></a>}}
\if{latex}{\out{\hypertarget{method-get_id}{}}}
\subsection{Method \code{get_id()}}{
Get the event identifier
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$get_id()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_name"></a>}}
\if{latex}{\out{\hypertarget{method-get_name}{}}}
\subsection{Method \code{get_name()}}{
Get the name of the event
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$get_name()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
